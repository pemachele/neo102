{"version":3,"sources":["logo.svg","Services.js","Components/TweetCard.js","Components/SearchBar.js","Components/SuggestionCard.js","View/SearchPage.js","App.js","reportWebVitals.js","index.js"],"names":["getResults","userInput","a","axios","method","url","data","JSON","stringify","query","count","statuses","modifiedData","map","tweet","i","id","text","userId","user","userName","name","userScreenName","screen_name","tweetUrl","entities","urls","profilePic","profile_image_url_https","retweetCount","retweet_count","likes","favorite_count","media","useStyles","makeStyles","theme","root","maxWidth","marginTop","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","main","maxHeight","overflowY","overflowX","cardHeader","margin","paddingBottom","cardContent","TweetCard","props","classes","content","post","className","Card","CardHeader","Avatar","aria-label","src","title","subheader","CardContent","CardActions","disableSpacing","IconButton","style","color","width","suggestionText","alignContent","borderBottom","borderWidth","SearchTab","Grid","container","direction","justify","alignItems","item","xs","sm","md","TextField","label","marginBottom","size","variant","onChange","handler","placeholder","SearchPage","useState","setContent","searchHandler","event","target","value","Typography","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba24471.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import axios from 'axios';\r\n\r\nconst url = 'http://ec2-13-58-137-105.us-east-2.compute.amazonaws.com/index.php/Neo/searchTweet';\r\n\r\nexport const getResults= async (userInput) =>{\r\n    try{\r\n        const {data:{statuses}} =await axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: JSON.stringify({\r\n                query: userInput,\r\n                count: 50\r\n            })\r\n\r\n        })\r\n\r\n        const modifiedData = statuses.map((tweet, i) => ({\r\n            id: tweet.id,\r\n            text: tweet.text,\r\n            userId: tweet.user.id,\r\n            userName: tweet.user.name,\r\n            userScreenName: tweet.user.screen_name,\r\n            tweetUrl: tweet.entities.urls,\r\n            profilePic: tweet.user.profile_image_url_https,\r\n            retweetCount: tweet.retweet_count,\r\n            likes: tweet.favorite_count,\r\n            media:tweet.entities.media\r\n        }))\r\n        return modifiedData\r\n    }catch (error) {\r\n\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport function getResults2() {\r\n\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport {red} from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: '500px',\r\n        marginTop: \"10px\",\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n    main: {\r\n        maxHeight: '600px',\r\n        overflowY: 'scroll',\r\n        overflowX:'hidden'\r\n    },\r\n    cardHeader:{\r\n        margin:'0px',\r\n        paddingBottom:'1px'\r\n    },\r\n    cardContent:{\r\n        margin:'0px',\r\n        paddingBottom:'1px'\r\n    }\r\n}));\r\n\r\nconst TweetCard = props => {\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n    //take the post data and store in content\r\n    const content = props.post;\r\n\r\n    const mediaCard = (content) => {\r\n        if (content.mediaType === \"no\") {\r\n            return null;\r\n        } else {\r\n            return <CardMedia\r\n                className={classes.media}\r\n                image={content.media}\r\n                title=\"Paella dish\"\r\n            />\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n                <div className={classes.main} >\r\n                    {content ? content.map((content, i) =>\r\n                        <Card className={classes.root} id={i}  >\r\n\r\n                            <CardHeader\r\n\r\n                                avatar={\r\n                                    <Avatar aria-label=\"recipe\" src={content.profilePic} className={classes.avatar}>\r\n\r\n                                    </Avatar>\r\n                                }\r\n\r\n                                title={content.userScreenName}\r\n                                subheader={content.userName}\r\n                                className={classes.cardHeader}\r\n                            />\r\n                            <CardContent className={classes.cardContent}>\r\n                                <p>\r\n                                    {content.text }\r\n                                </p>\r\n\r\n                            </CardContent>\r\n\r\n                            <CardActions disableSpacing>\r\n                                <IconButton  style={{color:'red'}}>\r\n                                    <FavoriteIcon  />\r\n                                </IconButton>\r\n                                {content.likes}\r\n\r\n                                <IconButton style={{color:'blue'}}>\r\n                                   <RepeatIcon/>\r\n                                </IconButton>\r\n                                {content.retweetCount}\r\n                            </CardActions>\r\n                        </Card>\r\n                    ) : <div></div>}\r\n                </div>\r\n\r\n\r\n\r\n    );\r\n}\r\nexport default TweetCard;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SuggestionCard from \"./SuggestionCard\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Grid} from '@material-ui/core'\r\n\r\n\r\nconst styles = {\r\n    main: {\r\n        margin: '10px 10px 0px 10px',\r\n\r\n\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles);\r\n\r\n\r\nconst SearchTab = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid  container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <TextField\r\n                        id=\"standard-basic\"\r\n                        label={<SearchIcon style={{marginBottom: '100px', paddingBottom: '100px'}}/>}\r\n                        size='small'\r\n                        variant='outlined'\r\n                        className={classes.main}\r\n                        onChange={props.handler}\r\n                        placeholder=\"search for a tweet\"\r\n\r\n                    />\r\n                </Grid>\r\n\r\n                {/*<Grid item xs={12} sm={8} md={8}>*/}\r\n                {/*    <SuggestionCard/>*/}\r\n                {/*</Grid>*/}\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SearchTab;","import React, {useState} from 'react';\r\nimport { Paper,Grid } from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst styles = {\r\n    main: {\r\n\r\n        width: '500px',\r\n        margin:'10px'\r\n\r\n    },\r\n    suggestionText:{\r\n       alignContent:'left',\r\n        borderBottom: '1px solid #0001',\r\n        borderWidth:'10px'\r\n\r\n    }\r\n}\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst SuggestionCard = () => {\r\n    const classes = useStyles();\r\n\r\n    const [suggestion, setSuggestion] = useState(['trump','Peter','machele']);\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.main} >\r\n            {suggestion ? suggestion.map((suggestion,i)=>\r\n                <div className={classes.suggestionText}>\r\n                    {suggestion}\r\n                </div>\r\n            ):<div> no suggestion</div>}\r\n\r\n        </Paper>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default SuggestionCard;","import React,{useState} from \"react\";\r\n//material ui components\r\nimport {Grid,Typography} from \"@material-ui/core\";\r\n\r\n//custom components\r\nimport TweetCard from \"../Components/TweetCard\";\r\nimport SearchTab from \"../Components/SearchBar\"\r\n\r\nimport{getResults} from \"../Services\";\r\n\r\n\r\n\r\nconst SearchPage =()=> {\r\n\r\n    const[content,setContent]=useState([] );\r\n\r\n\r\n    //handler for searching query\r\n    const searchHandler =async (event) =>{\r\n        setContent ( await getResults(event.target.value))\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n            <Typography variant=\"subtitle2\" component=\"h2\" color='primary' style={{margin:'2px'}}>\r\n              search for tweet\r\n            </Typography>\r\n            <Grid item xs={12} sm={8} md={8}>\r\n                <SearchTab handler={searchHandler}  />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={8} style={{marginBottom:'10px'}}>\r\n                <TweetCard\r\n                    post={content}\r\n                />\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default SearchPage;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport{getResults} from \"./Services\";\nimport SearchPage from \"./View/SearchPage\"\n\n\n\nfunction App() {\n    //         const url='https://api.twitter.com/1.1/search/tweets.json';\n    // const token='AAAAAAAAAAAAAAAAAAAAALq%2BJQEAAAAAWazLr8OF4fqSc40DomDUvQ97KKc%3Dj6GTYzE6kA90QkEnH0PAxEINENX8cLMk8h8Rh1WyouV9xAiy1x'\n    // axios.get(url,\n    //     { headers: { Authorization: `Bearer ${token}` } }\n    //    ).then(function (response) {\n    //     // handle success\n    //     console.log(response);\n    // })\n  return (\n    <div className=\"App\">\n        <SearchPage/>\n        {/*{console.log(getResults())}*/}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}